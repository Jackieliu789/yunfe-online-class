<?xml version="1.0" encoding="UTF-8" ?>
<beans xsi:schemaLocation="http://www.springframework.org/schema/beans  
	    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
	    http://www.springframework.org/schema/context  
	    http://www.springframework.org/schema/context/spring-context-3.0.xsd  
	    http://www.springframework.org/schema/tx  
	    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  


	    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop">

    <import resource="webContext.xml"/>
    <import resource="spring-task.xml"/>

    <!-- 启用CGliB -->
    <aop:aspectj-autoproxy/>

    <!-- 启用注解 -->
    <context:annotation-config/>

    <!--<context:component-scan base-package="com.jackiee.**"/>-->
    <context:component-scan base-package="com.yunfeisoft.dao.impl.postgres"/>
    <context:component-scan base-package="com.yunfeisoft.business.dao.impl.postgres"/>
    <context:component-scan base-package="com.yunfeisoft.service.**"/>
    <context:component-scan base-package="com.yunfeisoft.business.service.**"/>

    <context:property-placeholder location="classpath*:config/*.properties"/>

    <bean id="log4jInitialization" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="org.springframework.util.Log4jConfigurer"/>
        <property name="targetMethod" value="initLogging"/>
        <property name="arguments">
            <list>
                <value>classpath:log4j.properties</value>
            </list>
        </property>
    </bean>
    <bean id="dataAuthorityFilter" class="com.applet.sql.filter.DataAuthorityFilter"></bean>

    <bean id="parentDataSource" class="com.alibaba.druid.pool.DruidDataSource" abstract="true" init-method="init"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="initialSize" value="${jdbc.initialSize}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <property name="minIdle" value="${jdbc.minIdle}"/>
        <property name="maxWait" value="${jdbc.maxWait}"/>
        <property name="validationQuery" value="${jdbc.validationQuery}"/>
        <property name="testOnBorrow" value="${jdbc.testOnBorrow}"/>
        <property name="testOnReturn" value="${jdbc.testOnReturn}"/>
        <property name="testWhileIdle" value="${jdbc.testWhileIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
        <property name="removeAbandoned" value="${jdbc.removeAbandoned}"/>
        <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}"/>
        <property name="logAbandoned" value="${jdbc.logAbandoned}"/>
        <property name="filters" value="mergeStat"/>
        <property name="proxyFilters">
            <list>
                <ref bean="dataAuthorityFilter"/>
            </list>
        </property>
    </bean>

    <bean id="dataSource" parent="parentDataSource">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <aop:config>
        <aop:pointcut id="pt" expression="execution(* com.yunfeisoft.service.impl.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt"/>
    </aop:config>
    <aop:config>
        <aop:pointcut id="pt2" expression="execution(* com.yunfeisoft.business.service.impl.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt2"/>
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*save*" propagation="REQUIRED"/>
            <tx:method name="*modify*" propagation="REQUIRED"/>
            <tx:method name="*remove*" propagation="REQUIRED"/>
            <tx:method name="*query*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="is*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="load*" propagation="REQUIRED" read-only="true"/>

            <tx:method name="*Save*" propagation="REQUIRED"/>
            <tx:method name="*Modify*" propagation="REQUIRED"/>
            <tx:method name="*Remove*" propagation="REQUIRED"/>
            <tx:method name="*Query*" propagation="REQUIRED" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager"></property>
    </bean>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

</beans>